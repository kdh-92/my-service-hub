spring:
  application:
    name: auth-service

  profiles:
    active: local # 기본 프로파일 설정 (local)

  cloud:
    gateway:
      routes:
        - id: market-service
          uri: ####
          predicates:
            - Path=/api/v1/market/**
          filters:
            - JwtAuthentication

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ####
            client-secret: ####
            scope: profile, email
            redirect-uri: "http://localhost:8081/login/oauth2/code/google"
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

server:
  port: 8081

jwt:
  secret-key: "####"
  access-token-expire-time: 600
  refresh-token-expire-time: 7200

---

spring:
  main:
    web-application-type: reactive

  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:h2:mem:authdb;
    driver-class-name: org.h2.Driver
    username: sa
    password: ####

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

---
spring:
  config:
    activate:
      on-profile: development

  datasource:
    url: jdbc:mysql://localhost:3306/auth
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ####
    password: ####

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

---
spring:
  config:
    activate:
      on-profile: production

  datasource:
    url: jdbc:mysql://localhost:3306/auth
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ####
    password: ####

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
